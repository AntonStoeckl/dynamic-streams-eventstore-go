# PostgreSQL 17.5 Benchmark Master Configuration for EventStore High-Throughput Testing
# Optimized for write-heavy event appends with streaming replication (4GB allocation)

# Connection Settings
listen_addresses = '*'                   # Listen on all addresses (required for Docker)
max_connections = 100                    # Default
superuser_reserved_connections = 3       # Reserve connections for admin tasks

# Memory Settings (optimized for 4GB write master allocation)
shared_buffers = 2048MB                  # 50% of 4GB allocation (2GB) - INCREASED for I/O bottleneck fix
effective_cache_size = 3072MB            # 75% of 4GB allocation (3GB) - INCREASED for better planning
work_mem = 128MB                         # Increased for better query performance 
maintenance_work_mem = 512MB             # Increased for faster ANALYZE operations

# WAL (Write-Ahead Logging) Settings - PostgreSQL 17.5 Enhanced for High Throughput
wal_level = replica                      # Enable streaming replication
wal_buffers = 32MB                       # Adjusted for 4GB allocation, balanced for high throughput  
max_wal_size = 6GB                       # Increased from 4GB for high-throughput appends
min_wal_size = 1536MB                    # Increased from 1GB (1.5GB)
checkpoint_completion_target = 0.7       # Spread checkpoint I/O (changed from 0.9)
wal_compression = on                     # PostgreSQL 17 improved WAL compression
wal_keep_size = 2GB                      # Keep WAL for replicas

# Autovacuum Settings - Optimized for Append-Only EventStore Workload
autovacuum = on
autovacuum_max_workers = 3               # Increased from 2 (test) but less than original 4
autovacuum_naptime = 15s                 # Much more frequent checks for statistics updates
autovacuum_vacuum_scale_factor = 0.8     # Only vacuum at 80% dead tuples (minimal in append-only)
autovacuum_analyze_scale_factor = 0.005  # Analyze at 0.5% changed tuples (very aggressive for query plan stability)
autovacuum_analyze_threshold = 25        # Analyze after just 25 tuple changes (minimum threshold)
autovacuum_vacuum_cost_delay = 0ms       # No delays during analyze operations (non-blocking)
autovacuum_vacuum_cost_limit = 10000     # Higher I/O budget for faster analyze completion

# Statistics Settings - Optimized for Performance (2025-08-23)
default_statistics_target = 100          # Standard default, reduced from 1000 for faster ANALYZE
track_counts = on                        # Required for autovacuum
track_functions = all                    # Track function calls
track_activities = on                    # Track query activities
track_io_timing = on                     # Track I/O timing for monitoring

# JSONB and GIN Index Settings - PostgreSQL 17.5 Enhanced
effective_io_concurrency = 200           # Higher for write-optimized SSD
maintenance_io_concurrency = 10          # Maintenance I/O concurrency

# Query Planner Settings - Optimized for Modern Storage
random_page_cost = 1.1                   # SSD-optimized
seq_page_cost = 1.0                      # Sequential read cost
cpu_tuple_cost = 0.01                    # CPU cost per tuple
cpu_index_tuple_cost = 0.005             # CPU cost per index tuple
cpu_operator_cost = 0.0025               # CPU cost per operator

# Replication Settings - PostgreSQL 17.5 Streaming Replication
max_wal_senders = 5                      # Allow up to 5 replicas
max_replication_slots = 5                # Replication slots for failover
wal_sender_timeout = 60s                 # WAL sender timeout
synchronous_standby_names = ''           # Async replication for performance

# Checkpoint Settings - Optimized for Append-Heavy Event Store
checkpoint_timeout = 10min               # More frequent than original 15min for writes
checkpoint_warning = 30s                 # Warn if checkpoints too frequent

# Parallel Processing - PostgreSQL 17.5 Improvements
max_worker_processes = 8                 # Total worker processes
max_parallel_workers_per_gather = 2      # Parallel query workers (moderate for write master)
max_parallel_workers = 8                 # Max parallel workers
max_parallel_maintenance_workers = 2     # Parallel maintenance

# Connection and Lock Settings
deadlock_timeout = 1s                    # Keep standard
lock_timeout = 5s                        # Keep responsive
statement_timeout = 30s                  # Keep responsive for writes

# Background Writer Settings - Optimized for Write Workload
bgwriter_delay = 50ms                    # Keep responsive
bgwriter_lru_maxpages = 1000             # Higher for write workload
bgwriter_lru_multiplier = 10.0           # Aggressive background writing

# Query Planner Settings - Force GIN Index Usage (2025-08-23)
enable_seqscan = off                     # Disable sequential scans to force index usage
enable_indexscan = off                   # Disable regular index scans
enable_bitmapscan = on                   # Enable bitmap scans (optimal for GIN indexes)

# PostgreSQL 17.5 Performance Monitoring  
shared_preload_libraries = 'pg_stat_statements'  # Required for pg_stat_statements extension
pg_stat_statements.track = all           # Track all statements
pg_stat_statements.max = 10000           # Track more statements