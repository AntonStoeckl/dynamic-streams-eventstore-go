# PostgreSQL 17.5 Benchmark Replica Configuration for EventStore Query Optimization
# Optimized for complex JSONB queries and read-heavy workloads (6GB allocation)

# Connection Settings
listen_addresses = '*'                   # Listen on all addresses (required for Docker)
max_connections = 200                    # Must be >= master (200) for replication
superuser_reserved_connections = 3       # Reserve connections for admin tasks

# Memory Settings (optimized for 6GB read replica allocation)
shared_buffers = 1536MB                  # 25% of 6GB allocation (1.5GB)
effective_cache_size = 3600MB            # 60% of 6GB allocation (3.6GB)
work_mem = 96MB                          # Increased for JSON queries within 6GB limit
maintenance_work_mem = 384MB             # Maintenance operations (6% of 6GB)

# WAL Settings for Replica (minimal since read-only)
wal_level = replica                      # Required for standby
wal_buffers = 48MB                       # Scaled for 6GB allocation 
max_wal_size = 3072MB                    # Scaled for 6GB allocation (3GB)
min_wal_size = 768MB                     # Scaled for 6GB allocation
wal_compression = on                     # Keep compression



# Autovacuum Settings - Optimized for Read-Heavy EventStore Replica
autovacuum = on                          # Still needed for statistics
autovacuum_max_workers = 1               # Minimal workers for replica
autovacuum_naptime = 10min               # Less frequent checks (read-only, minimal dead tuples)
autovacuum_vacuum_scale_factor = 0.9     # Almost never vacuum (read-only workload)
autovacuum_analyze_scale_factor = 0.05   # Analyze at 5% changed tuples (query performance critical)



# Statistics Settings - High for Complex Query Planning
default_statistics_target = 1000         # High stats for accurate JSONB query planning
constraint_exclusion = partition         # Enable constraint exclusion
track_counts = on                        # Track table statistics
track_functions = all                    # Track function usage
track_activities = on                    # Track query activities
track_io_timing = on                     # Track I/O timing for query optimization

# Query Planner Settings - Optimized for JSONB and Complex Queries
random_page_cost = 1.1                   # SSD-optimized
effective_io_concurrency = 300           # Higher for read-heavy workloads
maintenance_io_concurrency = 10          # Maintenance I/O
cpu_tuple_cost = 0.01                    # Favor CPU over I/O
cpu_index_tuple_cost = 0.005             # Encourage index usage
cpu_operator_cost = 0.0025               # Lower operator cost for complex queries
seq_page_cost = 1.0                      # Sequential scan cost

# Parallel Processing - PostgreSQL 17.5 Optimized for 2GB Allocation
max_worker_processes = 8                 # Must be >= master (8) for replication
max_parallel_workers_per_gather = 2      # Conservative for memory constraints
max_parallel_workers = 6                 # Max parallel workers (reduced)
parallel_tuple_cost = 0.1                # Encourage parallelism for large queries
parallel_setup_cost = 1000.0             # Parallel setup cost
min_parallel_table_scan_size = 8MB       # Lower threshold for 6GB allocation
min_parallel_index_scan_size = 1MB       # Higher threshold for memory efficiency

# JSONB-Specific Optimizations for PostgreSQL 17.5
# These settings optimize for the event store's JSONB payload and metadata queries
enable_hashjoin = on                     # Enable hash joins for JSONB operations
enable_mergejoin = on                    # Enable merge joins
enable_nestloop = on                     # Enable nested loop joins
enable_material = on                     # Enable materialization
enable_sort = on                         # Enable sorting operations

# Memory Settings for Complex Queries
temp_buffers = 32MB                      # Temporary buffers for queries (increased for 6GB)
hash_mem_multiplier = 2.0                # Higher multiplier for 6GB allocation

# Standby Settings - PostgreSQL 17.5 Enhanced Streaming Replication
hot_standby = on                         # Allow read queries on replica
max_standby_archive_delay = 30s          # Max delay for archive recovery
max_standby_streaming_delay = 30s        # Max delay for streaming recovery
wal_receiver_create_temp_slot = on       # Create temp slot if needed (PostgreSQL 17 feature)
wal_receiver_status_interval = 10s       # Status reporting interval
wal_receiver_timeout = 60s               # Receiver timeout

# Background Writer Settings (minimal for read-only)
bgwriter_delay = 200ms                   # Less aggressive than master
bgwriter_lru_maxpages = 100              # Lower for read-only workload
bgwriter_lru_multiplier = 2.0            # Lower multiplier

# Connection and Lock Settings (relaxed for read workload)
deadlock_timeout = 1s                    # Keep standard
lock_timeout = 10s                       # Higher timeout for long queries
statement_timeout = 300s                 # Much higher for complex analytical queries

# Cost-Based Optimizer Settings for JSONB Queries
from_collapse_limit = 8                  # Collapse FROM items
join_collapse_limit = 8                  # Collapse JOIN items
geqo = on                                # Enable genetic query optimizer for complex joins
geqo_threshold = 12                      # Start GEQO at 12 relations

# PostgreSQL 17.5 Performance Monitoring
shared_preload_libraries = 'pg_stat_statements'  # Required for pg_stat_statements extension
pg_stat_statements.track = all           # Track all statements
pg_stat_statements.max = 10000           # Track more statements for query analysis